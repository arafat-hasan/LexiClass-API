"""add_field_based_classification_schema

Revision ID: df372993474c
Revises: 6e26059a41c5
Create Date: 2025-10-24 18:06:58.658927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'df372993474c'
down_revision: Union[str, Sequence[str], None] = '6e26059a41c5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('field',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_field_project_id_project'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_field'))
    )
    op.create_index(op.f('ix_field_project_id'), 'field', ['project_id'], unique=False)
    op.create_table('task',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('celery_id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_task_project_id_project'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    op.create_index(op.f('ix_task_celery_id'), 'task', ['celery_id'], unique=True)
    op.create_index(op.f('ix_task_project_id'), 'task', ['project_id'], unique=False)
    op.create_table('field_class',
    sa.Column('field_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_field_class_field_id_field'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_field_class'))
    )
    op.create_index(op.f('ix_field_class_field_id'), 'field_class', ['field_id'], unique=False)
    op.create_table('model',
    sa.Column('field_id', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('model_path', sa.String(length=512), nullable=False),
    sa.Column('vectorizer_path', sa.String(length=512), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('TRAINING', 'READY', 'FAILED', name='modelstatus', native_enum=False, length=50), nullable=False),
    sa.Column('trained_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_model_field_id_field'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_model'))
    )
    op.create_index(op.f('ix_model_field_id'), 'model', ['field_id'], unique=False)
    op.create_table('document_label',
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('field_id', sa.String(), nullable=False),
    sa.Column('class_id', sa.String(), nullable=False),
    sa.Column('is_training_data', sa.Boolean(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['field_class.id'], name=op.f('fk_document_label_class_id_field_class'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name=op.f('fk_document_label_document_id_document'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_document_label_field_id_field'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_label')),
    sa.UniqueConstraint('document_id', 'field_id', name='uq_document_field_label')
    )
    op.create_index(op.f('ix_document_label_class_id'), 'document_label', ['class_id'], unique=False)
    op.create_index(op.f('ix_document_label_document_id'), 'document_label', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_label_field_id'), 'document_label', ['field_id'], unique=False)
    op.create_table('prediction',
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('field_id', sa.String(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=False),
    sa.Column('class_id', sa.String(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['field_class.id'], name=op.f('fk_prediction_class_id_field_class'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name=op.f('fk_prediction_document_id_document'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_prediction_field_id_field'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], name=op.f('fk_prediction_model_id_model'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prediction')),
    sa.UniqueConstraint('document_id', 'field_id', name='uq_document_field_prediction')
    )
    op.create_index(op.f('ix_prediction_class_id'), 'prediction', ['class_id'], unique=False)
    op.create_index(op.f('ix_prediction_document_id'), 'prediction', ['document_id'], unique=False)
    op.create_index(op.f('ix_prediction_field_id'), 'prediction', ['field_id'], unique=False)
    op.create_index(op.f('ix_prediction_model_id'), 'prediction', ['model_id'], unique=False)
    op.drop_index(op.f('ix_document_prediction_id'), table_name='document')
    op.drop_column('document', 'prediction')
    op.drop_column('document', 'label')
    op.drop_column('document', 'confidence')
    op.drop_column('document', 'prediction_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document', sa.Column('prediction_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('document', sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('document', sa.Column('label', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('document', sa.Column('prediction', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_document_prediction_id'), 'document', ['prediction_id'], unique=False)
    op.drop_index(op.f('ix_prediction_model_id'), table_name='prediction')
    op.drop_index(op.f('ix_prediction_field_id'), table_name='prediction')
    op.drop_index(op.f('ix_prediction_document_id'), table_name='prediction')
    op.drop_index(op.f('ix_prediction_class_id'), table_name='prediction')
    op.drop_table('prediction')
    op.drop_index(op.f('ix_document_label_field_id'), table_name='document_label')
    op.drop_index(op.f('ix_document_label_document_id'), table_name='document_label')
    op.drop_index(op.f('ix_document_label_class_id'), table_name='document_label')
    op.drop_table('document_label')
    op.drop_index(op.f('ix_model_field_id'), table_name='model')
    op.drop_table('model')
    op.drop_index(op.f('ix_field_class_field_id'), table_name='field_class')
    op.drop_table('field_class')
    op.drop_index(op.f('ix_task_project_id'), table_name='task')
    op.drop_index(op.f('ix_task_celery_id'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_field_project_id'), table_name='field')
    op.drop_table('field')
    # ### end Alembic commands ###
